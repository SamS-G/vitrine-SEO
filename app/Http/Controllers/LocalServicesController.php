<?php

namespace App\Http\Controllers;

use App\Models\City;
use App\Models\MetaSchema;
use App\Models\Service;
use FilesystemIterator;
use Illuminate\Contracts\View\Factory;
use Illuminate\Contracts\View\View;
use Illuminate\Foundation\Application;
use Illuminate\Http\Response;
use Illuminate\Support\Facades\URL;
use Illuminate\Support\Str;

class LocalServicesController extends Controller
{
    public function showService($type, $ville): View|Application|Factory|Response
    {
        // üîπ D√©finition du slug du service en fonction de l'URL
        $serviceType = Str::contains(URL::current(), 'pose-') ? "pose-$type" : $type;

        // üîπ V√©rification et r√©cup√©ration des donn√©es (avec gestion d'erreurs)
        $city = City::where('slug', $ville)->first();

        if (is_null($city)) {
            abort(404, "La ville ($ville) demand√©e n'existe pas.");
        }
        // üîπ V√©rifier si le service existe (g√®re les exceptions pose- et non pose-)
        $service = Service::where('slug', $serviceType)->first();

        // Si le service avec ce format n'existe pas, essayer avec `pose-`
        if (!$service && !Str::startsWith($serviceType, 'pose-')) {
            $serviceType = "pose-$type";
            $service = Service::where('slug', $serviceType)->first();
        }

        // Si toujours pas trouv√©, on retourne une 404
        if (!$service) {
            abort(404, "Le service demand√© n'est pas propos√© :(");
        }

        // üîπ R√©cup√©ration des m√©tadonn√©es
        $meta_data = MetaSchema::where('service_id', $service->id)
            ->where('city_id', $city->id)
            ->first();

        if (!$meta_data) {
            return response()->view('errors.service-not-found', [
                'message' => 'Service non disponible pour cette ville.',
                'meta_title' => 'Service non disponible',
                'meta_description' => 'Aucune information disponible pour cette combinaison service/ville',
            ], 404);
        }

        // üîπ Retour de la vue avec les donn√©es
        return view("pages.services.local.{$serviceType}", compact('service', 'city', 'meta_data'));
    }

    public function showCityServices($ville): View|Application|Factory|Response
    {
        $directory = resource_path('views/pages/services/local');

        if (!is_dir($directory)) {
            abort(404, "Le r√©pertoire [$directory] n'existe pas.");
        }
        $iterator = new FilesystemIterator($directory);
        $filenames = [];

        foreach ($iterator as $fileInfo) {
            if ($fileInfo->isFile()) {
                // R√©cup√©ration du nom sans extension et avant le premier "."
                $filename = explode('.', pathinfo($fileInfo->getFilename(), PATHINFO_FILENAME))[0]; // [0] = first part only
                $filenames[] = $filename;
            }
        }
        // G√©n√©ration des urls de pages locales
        $urls = array_map(fn($filename) => url("services/{$filename}-{$ville}"), $filenames);

        $titles = [
            'Pose de fen√™tres',
            'Pose de moustiquaires',
            'Pose de portails',
            'Pose de portes de garage',
            'Pose de portes',
            'Pose de rev√™tements de sol',
            'Pose de volets',
            'D√©pannage de volets roulants',
            'Travaux en b√¢timent'
        ];
        // Descriptions SEO optimis√©es
        $descriptions = [
            'Installation et r√©novation de fen√™tres pour une meilleure isolation.',
            'Pose de moustiquaires sur-mesure pour une protection efficace.',
            'Installation de portails s√©curis√©s et esth√©tiques pour votre maison.',
            'Pose de portes de garage battantes, sectionnelles ou enroulables.',
            'Installation de portes int√©rieures et ext√©rieures adapt√©es √† vos besoins.',
            'Pose de rev√™tements de sol (parquet, carrelage, lino) pour un int√©rieur √©l√©gant.',
            'Installation de volets roulants, battants et motoris√©s.',
            'D√©pannage rapide et efficace de volets roulants bloqu√©s ou endommag√©s.',
            'Travaux de r√©novation et am√©nagement int√©rieur/ext√©rieur.'
        ];

        $prestations = array_map(function ($title, $url, $description) {
            return compact('title', 'url', 'description');
        }, $titles, $urls, $descriptions);

        return view('pages.services.local.prestations.index', compact('prestations', 'ville'));
    }
}
